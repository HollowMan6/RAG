# Software Install Policy

LUMI is an experimental HPC system aiming at pre-exascale simulations.

As such, much of the software is also expected to be experimental or under development. The LUMI user support team is small (just 9 FTEs), and we cannot maintain and install all software centrally (e.g. `module load xyz`) for all the projects running on LUMI. The maximum amount of help we can offer to each project is on the order of a few person-days, including answering the support tickets. It is not enough time to build, test and maintain a complex software environment for a particular field of science.

**A research group that has been awarded time on LUMI is expected to be able to compile and install the software that they need themselves in their own project directories.** If they cannot do that, they need to secure help from their country's local HPC organization responsible for LUMI support in advance.

The LUMI User Support team maintains an infrastructure for automatic and reproducible software installations, based on EasyBuild and Spack. EasyBuild is our preferred choice, which we actively contribute installation scripts to in the [LUMI EasyBuild-contrib](https://github.com/Lumi-supercomputer/LUMI-EasyBuild-contrib) repository on GitHub. We also provide a pre-configured Spack instance which can install packages from the [upstream Spack repository](https://spack.readthedocs.io/en/latest/package_list.html) on GitHub. We would like, in the spirit of European HPC collaboration, to encourage users and consortium members to contribute to these software collections and share installation scripts.

**The main file systems on LUMI are not well suited to handle a large amount (i.e. millions) of small files**. We strongly advise against installing certain software packages like Python (Conda) and R directly in the home and/or project directories. The file system quotas will, in general, not be raised to allow this practice. Such software can often be containerized to lessen the load on the parallel file systems. Please consult the [Python packages installation guide](./installing/python.md) for an overview of better alternatives.

**LUMI operates under a "bring your own license" model for commercial software**. Only a small amount of software (mainly development tools) are covered by the LUMI budget. If your organisation has existing software licenses, these licenses can in many cases be used on LUMI by checking out the licenses from the organisation's own license server across the internet when a job starts on a compute node. Please note that there are currently no facilities for running private license servers inside LUMI.
